import { HTMLSidebarElement, Sidebar, SidebarConfig } from './sidebarjs.interface';
export declare class SidebarJS implements Sidebar {
    component: HTMLElement;
    container: HTMLElement;
    background: HTMLElement;
    documentMinSwipeX: number;
    documentSwipeRange: number;
    nativeSwipe: boolean;
    nativeSwipeOpen: boolean;
    position: string;
    private initialTouch;
    private touchMoveSidebar;
    private openMovement;
    constructor({component, container, background, documentMinSwipeX, documentSwipeRange, nativeSwipe, nativeSwipeOpen, position}?: SidebarConfig);
    toggle(): void;
    open(): void;
    close(): void;
    isVisible(): boolean;
    setPosition(position: string): void;
    addAttrsEventsListeners(sidebarName: string): void;
    private hasLeftPosition();
    private hasRightPosition();
    private transcludeContent();
    private addNativeGestures();
    private addNativeOpenGestures();
    private onTouchStart(e);
    private onTouchMove(e);
    private onTouchEnd();
    private moveSidebar(movement);
    private changeBackgroundOpacity(movement);
    private onSwipeOpenStart(e);
    private onSwipeOpenMove(e);
    private onSwipeOpenEnd();
    private getSidebarPosition(swiped);
    private targetElementIsBackground(e);
    static create(element: string): HTMLElement;
    static vendorify(el: HTMLElement, prop: string, val: string): HTMLElement;
    static elemHasListener(elem: HTMLSidebarElement, value?: boolean): boolean;
    static readonly version: string;
}
